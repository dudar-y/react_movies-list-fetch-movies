{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","isError","setIsError","isLoading","setIsLoading","data","setData","foundMovie","setFoundMovie","findMovie","useCallback","fetch","then","res","json","catch","Response","Error","getMovie","trim","movieData","finally","useEffect","newMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onKeyPress","e","key","preventDefault","onChange","event","target","disabled","cn","onClick","App","setMovies","currentMovies","some","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8afa3a0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { ResponseError } from '../../types/ResponseError';\nimport { MovieData } from '../../types/MovieData';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nconst DEFAULT_POSTER\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  addMovie: (film: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<MovieData | null | ResponseError>(null);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const handleQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const findMovie = useCallback(() => {\n    setIsLoading(true);\n    getMovie(query.trim())\n      .then(movieData => {\n        setData(movieData);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  const handleFindButton = () => {\n    findMovie();\n  };\n\n  const handleInputKeyPressEnter = (\n    e: React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    e.preventDefault();\n    findMovie();\n  };\n\n  const handleAddButton = () => {\n    addMovie(foundMovie as Movie);\n    setQuery('');\n    setFoundMovie(null);\n  };\n\n  useEffect(() => {\n    if (data !== null && 'Title' in data) {\n      const newMovie: Movie = {\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: (!data.Poster || data.Poster === 'N/A')\n          ? DEFAULT_POSTER\n          : data.Poster,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      };\n\n      setFoundMovie(newMovie);\n    } else if (data !== null && data.Error) {\n      setIsError(true);\n    }\n  }, [data]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onKeyPress={handleInputKeyPressEnter}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query}\n              data-cy=\"searchButton\"\n              type=\"button\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              onClick={handleFindButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=86be5b45';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    setMovies((currentMovies) => {\n      const isMovie = currentMovies.some(film => film.imdbId === movie.imdbId);\n\n      if (!isMovie) {\n        return [\n          ...currentMovies,\n          movie,\n        ];\n      }\n\n      return currentMovies;\n    });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}